local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\7\99","\176\41\77\46\231\131\38"),function(v42) if (v9(v42,2)==(246 -167)) then local v95=0;while true do if (v95==0) then v30=v8(v11(v42,1,1));return "";end end else local v96=0;local v97;while true do if (v96==0) then v97=v10(v8(v42,16));if v30 then local v120=0;local v121;while true do if (1==v120) then return v121;end if (v120==0) then v121=v13(v97,v30);v30=nil;v120=1;end end else return v97;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v98=0;local v99;while true do if (v98==0) then v99=(v43/((5 -3)^(v44-1)))%(2^(((v45-1) -(v44-1)) + (1 -0))) ;return v99-(v99%1) ;end end else local v100=2^(v44-1) ;return (((v43%(v100 + v100))>=v100) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + (2 -1) ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * (875 -(555 + 64))) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (0==v56) then v57=v34();v58=v34();v56=1;end if (v56==3) then if (v61==(568 -(367 + 201))) then if (v60==(927 -(214 + 713))) then return v62 * 0 ;else local v122=0;while true do if (v122==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (v56==1) then v59=932 -(857 + 74) ;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end end end local function v36(v63) local v64;if  not v63 then local v101=0;while true do if (v101==0) then v63=v34();if (v63==(0 + 0)) then return "";end break;end end end v64=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;local v65={};for v79=1, #v64 do v65[v79]=v10(v9(v11(v64,v79,v79)));end return v14(v65);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v66==0) then v67={};v68={};v69={};v70={v67,v68,nil,v69};v66=1;end if (v66==1) then v71=v34();v72={};for v105=878 -(282 + 595) ,v71 do local v106=0;local v107;local v108;while true do if (v106==0) then v107=v32();v108=nil;v106=1;end if (1==v106) then if (v107==1) then v108=v32()~=0 ;elseif (v107==2) then v108=v35();elseif (v107==3) then v108=v36();end v72[v105]=v108;break;end end end v70[3]=v32();v66=2;end if (2==v66) then for v109=1,v34() do local v110=0;local v111;while true do if (v110==0) then v111=v32();if (v31(v111,1,1)==0) then local v124=0;local v125;local v126;local v127;while true do if (v124==3) then if (v31(v126,3,3)==1) then v127[4]=v72[v127[4]];end v67[v109]=v127;break;end if (v124==0) then v125=v31(v111,1639 -(1523 + 114) ,3);v126=v31(v111,4 + 0 ,6);v124=1;end if (v124==2) then if (v31(v126,1,1066 -(68 + 997) )==1) then v127[2]=v72[v127[2]];end if (v31(v126,2,1272 -(226 + 1044) )==1) then v127[3]=v72[v127[3]];end v124=3;end if (v124==1) then v127={v33(),v33(),nil,nil};if (v125==0) then local v135=0;while true do if (v135==0) then v127[3]=v33();v127[4]=v33();break;end end elseif (v125==1) then v127[3]=v34();elseif (v125==2) then v127[3]=v34() -(2^16) ;elseif (v125==3) then local v306=0;while true do if (v306==0) then v127[3]=v34() -((2 -0)^16) ;v127[4]=v33();break;end end end v124=2;end end end break;end end end for v112=1,v34() do v68[v112-1 ]=v39();end return v70;end end end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v81=v76;local v82=v77;local v83=v78;local v84=v38;local v85=1;local v86= -1;local v87={};local v88={...};local v89=v20("#",...) -1 ;local v90={};local v91={};for v102=0,v89 do if (v102>=v83) then v87[v102-v83 ]=v88[v102 + 1 ];else v91[v102]=v88[v102 + 1 ];end end local v92=(v89-v83) + 1 ;local v93;local v94;while true do local v103=0;while true do if (0==v103) then v93=v81[v85];v94=v93[1];v103=1;end if (v103==1) then if (v94<=37) then if (v94<=18) then if (v94<=8) then if (v94<=3) then if (v94<=1) then if (v94>0) then local v139=0;local v140;while true do if (0==v139) then v140=v93[2];do return v21(v91,v140,v86);end break;end end else v91[v93[2]]=v91[v93[3]];end elseif (v94==2) then local v143=0;local v144;while true do if (v143==0) then v144=v93[2];v91[v144]=v91[v144](v91[v144 + (4 -3) ]);break;end end else local v145=v93[119 -(32 + 85) ];v91[v145]=v91[v145](v21(v91,v145 + 1 ,v86));end elseif (v94<=5) then if (v94>4) then local v147=0;local v148;local v149;local v150;local v151;while true do if (v147==0) then v148=v93[2];v149,v150=v84(v91[v148](v21(v91,v148 + 1 + 0 ,v86)));v147=1;end if (v147==2) then for v339=v148,v86 do local v340=0;while true do if (v340==0) then v151=v151 + 1 ;v91[v339]=v149[v151];break;end end end break;end if (v147==1) then v86=(v150 + v148) -1 ;v151=0;v147=2;end end else local v152=v93[2];local v153=v91[v152];for v241=v152 + 1 + 0 ,v86 do v15(v153,v91[v241]);end end elseif (v94<=6) then v91[v93[2]]={};elseif (v94>7) then v91[v93[2]]=v91[v93[960 -(892 + 65) ]][v93[4]];else v91[v93[2]]=v91[v93[3]]%v91[v93[9 -5 ]] ;end elseif (v94<=13) then if (v94<=10) then if (v94>9) then v85=v93[3];else local v156=0;local v157;while true do if (v156==0) then v157=v93[2];v91[v157]=v91[v157]();break;end end end elseif (v94<=11) then v91[v93[2]]={};elseif (v94==12) then v91[v93[2]]=v93[3] + v91[v93[4]] ;else local v270=0;local v271;while true do if (v270==0) then v271=v93[2];v91[v271]=v91[v271](v91[v271 + 1 ]);break;end end end elseif (v94<=(27 -12)) then if (v94==(25 -11)) then local v159=v93[352 -(87 + 263) ];local v160,v161=v84(v91[v159](v21(v91,v159 + (181 -(67 + 113)) ,v86)));v86=(v161 + v159) -1 ;local v162=0;for v242=v159,v86 do v162=v162 + 1 ;v91[v242]=v160[v162];end else local v163=0;local v164;while true do if (v163==0) then v164=v93[2 + 0 ];v91[v164]=v91[v164](v21(v91,v164 + (2 -1) ,v86));break;end end end elseif (v94<=16) then v91[v93[2]]=v91[v93[3]] + v93[4] ;elseif (v94>17) then if (v93[2 + 0 ]==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]]=v93[3] + v91[v93[15 -11 ]] ;end elseif (v94<=27) then if (v94<=22) then if (v94<=20) then if (v94==19) then local v166=0;local v167;local v168;local v169;while true do if (0==v166) then v167=v93[2];v168=v91[v167];v166=1;end if (v166==1) then v169=v91[v167 + 2 ];if (v169>0) then if (v168>v91[v167 + 1 ]) then v85=v93[3];else v91[v167 + 3 ]=v168;end elseif (v168<v91[v167 + 1 ]) then v85=v93[3];else v91[v167 + 3 ]=v168;end break;end end else v91[v93[2]]=v74[v93[3]];end elseif (v94==21) then if (v93[2]==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end else local v172=0;local v173;while true do if (v172==0) then v173=v93[2];do return v91[v173](v21(v91,v173 + 1 ,v93[3]));end break;end end end elseif (v94<=24) then if (v94==23) then v91[v93[2]]=v91[v93[3]]%v91[v93[4]] ;else do return;end end elseif (v94<=25) then do return v91[v93[954 -(802 + 150) ]]();end elseif (v94>26) then local v274=0;local v275;while true do if (v274==0) then v275=v93[2];v91[v275](v21(v91,v275 + 1 ,v93[3]));break;end end else local v276=0;local v277;while true do if (v276==0) then v277=v93[5 -3 ];do return v21(v91,v277,v86);end break;end end end elseif (v94<=32) then if (v94<=(52 -23)) then if (v94>28) then local v175=v93[2];v91[v175]=v91[v175](v21(v91,v175 + 1 + 0 ,v93[3]));else do return;end end elseif (v94<=(1027 -(915 + 82))) then local v177=0;local v178;while true do if (v177==0) then v178=v93[2];v91[v178](v21(v91,v178 + 1 ,v86));break;end end elseif (v94==31) then v75[v93[3]]=v91[v93[2]];else local v280=0;local v281;local v282;local v283;while true do if (v280==2) then if (v282>0) then if (v283<=v91[v281 + 1 ]) then local v394=0;while true do if (0==v394) then v85=v93[3];v91[v281 + 3 ]=v283;break;end end end elseif (v283>=v91[v281 + 1 ]) then local v395=0;while true do if (v395==0) then v85=v93[3];v91[v281 + 3 ]=v283;break;end end end break;end if (v280==0) then v281=v93[2];v282=v91[v281 + 2 ];v280=1;end if (1==v280) then v283=v91[v281] + v282 ;v91[v281]=v283;v280=2;end end end elseif (v94<=34) then if (v94>33) then for v245=v93[2],v93[3] do v91[v245]=nil;end else local v179=v93[2];local v180=v91[v179];local v181=v91[v179 + (5 -3) ];if (v181>0) then if (v180>v91[v179 + 1 ]) then v85=v93[3];else v91[v179 + 3 ]=v180;end elseif (v180<v91[v179 + 1 ]) then v85=v93[3];else v91[v179 + 3 ]=v180;end end elseif (v94<=(21 + 14)) then local v182=0;local v183;while true do if (0==v182) then v183=v93[2];do return v91[v183](v21(v91,v183 + 1 ,v93[3]));end break;end end elseif (v94>36) then v91[v93[2]]=v91[v93[3]]%v93[4] ;elseif (v91[v93[2 -0 ]]==v93[4]) then v85=v85 + (1188 -(1069 + 118)) ;else v85=v93[3];end elseif (v94<=56) then if (v94<=46) then if (v94<=41) then if (v94<=39) then if (v94==38) then local v184=0;local v185;while true do if (v184==0) then v185=v93[2];v91[v185](v21(v91,v185 + 1 ,v86));break;end end else local v186=0;local v187;local v188;local v189;local v190;while true do if (0==v186) then v187=v93[2];v188,v189=v84(v91[v187](v91[v187 + 1 ]));v186=1;end if (v186==1) then v86=(v189 + v187) -1 ;v190=0;v186=2;end if (v186==2) then for v347=v187,v86 do local v348=0;while true do if (v348==0) then v190=v190 + 1 ;v91[v347]=v188[v190];break;end end end break;end end end elseif (v94>40) then local v191=v82[v93[3]];local v192;local v193={};v192=v18({},{[v7("\107\137\184\180\80\179\169","\218\52\214\209")]=function(v247,v248) local v249=0;local v250;while true do if (v249==0) then v250=v193[v248];return v250[1][v250[2]];end end end,[v7("\40\14\166\75\0\56\166\74\18\41","\46\119\81\200")]=function(v251,v252,v253) local v254=v193[v252];v254[1][v254[2]]=v253;end});for v256=1,v93[4] do v85=v85 + 1 ;local v257=v81[v85];if (v257[1]==(106 -59)) then v193[v256-1 ]={v91,v257[3]};else v193[v256-1 ]={v74,v257[3]};end v90[ #v90 + 1 ]=v193;end v91[v93[2]]=v40(v191,v192,v75);elseif v91[v93[2]] then v85=v85 + (1 -0) ;else v85=v93[3];end elseif (v94<=43) then if (v94==(8 + 34)) then local v195=v93[2];local v196,v197=v84(v91[v195](v21(v91,v195 + 1 ,v93[3])));v86=(v197 + v195) -(1 -0) ;local v198=0;for v259=v195,v86 do v198=v198 + 1 ;v91[v259]=v196[v198];end elseif  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=44) then v85=v93[3];elseif (v94>(45 + 0)) then v91[v93[2]]=v91[v93[3]][v93[4]];else v91[v93[2]][v91[v93[3]]]=v91[v93[4]];end elseif (v94<=51) then if (v94<=48) then if (v94>47) then if (v91[v93[2]]==v93[4]) then v85=v85 + (792 -(368 + 423)) ;else v85=v93[3];end else v91[v93[6 -4 ]]=v91[v93[3]];end elseif (v94<=49) then local v202=v93[2];local v203,v204=v84(v91[v202](v91[v202 + 1 ]));v86=(v204 + v202) -1 ;local v205=0;for v262=v202,v86 do local v263=0;while true do if (v263==0) then v205=v205 + 1 ;v91[v262]=v203[v205];break;end end end elseif (v94>50) then for v325=v93[20 -(10 + 8) ],v93[11 -8 ] do v91[v325]=nil;end else local v292=v93[2];local v293=v91[v93[3]];v91[v292 + 1 ]=v293;v91[v292]=v293[v93[446 -(416 + 26) ]];end elseif (v94<=53) then if (v94==52) then v91[v93[2]]();elseif v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=54) then v91[v93[2]]=v74[v93[9 -6 ]];elseif (v94>(24 + 31)) then v91[v93[2]]= #v91[v93[3]];else v91[v93[2]]=v75[v93[3]];end elseif (v94<=65) then if (v94<=60) then if (v94<=58) then if (v94==57) then local v208=v93[2];local v209,v210=v84(v91[v208](v21(v91,v208 + 1 ,v93[3])));v86=(v210 + v208) -1 ;local v211=0;for v264=v208,v86 do local v265=0;while true do if (v265==0) then v211=v211 + 1 ;v91[v264]=v209[v211];break;end end end else local v212=v93[2];v91[v212]=v91[v212](v21(v91,v212 + 1 ,v93[3]));end elseif (v94==59) then v91[v93[2]]=v93[3];else v91[v93[2]]= #v91[v93[3]];end elseif (v94<=62) then if (v94>61) then v91[v93[2]]=v75[v93[3]];else v91[v93[2]]=v93[3];end elseif (v94<=63) then local v221=0;local v222;local v223;while true do if (v221==1) then for v354=v222 + 1 ,v86 do v15(v223,v91[v354]);end break;end if (v221==0) then v222=v93[2];v223=v91[v222];v221=1;end end elseif (v94>64) then v91[v93[2]]();else v75[v93[3]]=v91[v93[2]];end elseif (v94<=70) then if (v94<=(118 -51)) then if (v94==66) then v91[v93[2]]=v91[v93[3]] + v93[4] ;else local v225=0;local v226;local v227;while true do if (v225==1) then v91[v226 + 1 ]=v227;v91[v226]=v227[v93[4]];break;end if (v225==0) then v226=v93[2];v227=v91[v93[3]];v225=1;end end end elseif (v94<=(506 -(145 + 293))) then local v228=v93[2];local v229=v91[v228 + 2 ];local v230=v91[v228] + v229 ;v91[v228]=v230;if (v229>0) then if (v230<=v91[v228 + 1 ]) then local v355=0;while true do if (v355==0) then v85=v93[3];v91[v228 + (433 -(44 + 386)) ]=v230;break;end end end elseif (v230>=v91[v228 + 1 ]) then local v356=0;while true do if (v356==0) then v85=v93[3];v91[v228 + 3 ]=v230;break;end end end elseif (v94>69) then v91[v93[2]][v91[v93[3]]]=v91[v93[4]];else v91[v93[1488 -(998 + 488) ]]=v91[v93[3]]%v93[4] ;end elseif (v94<=72) then if (v94==71) then local v232=0;local v233;local v234;local v235;while true do if (v232==0) then v233=v82[v93[3]];v234=nil;v232=1;end if (v232==2) then for v357=1,v93[4] do local v358=0;local v359;while true do if (v358==0) then v85=v85 + 1 ;v359=v81[v85];v358=1;end if (v358==1) then if (v359[1]==47) then v235[v357-1 ]={v91,v359[3]};else v235[v357-(1 + 0) ]={v74,v359[3 + 0 ]};end v90[ #v90 + 1 ]=v235;break;end end end v91[v93[2]]=v40(v233,v234,v75);break;end if (v232==1) then v235={};v234=v18({},{[v7("\122\243\63\37\136\181\93","\208\37\172\86\75\236")]=function(v360,v361) local v362=v235[v361];return v362[1][v362[2]];end,[v7("\150\130\225\142\187\160\179\235\142\180","\204\201\221\143\235")]=function(v363,v364,v365) local v366=0;local v367;while true do if (v366==0) then v367=v235[v364];v367[1][v367[2]]=v365;break;end end end});v232=2;end end else local v236=0;local v237;while true do if (0==v236) then v237=v93[2];v91[v237]=v91[v237]();break;end end end elseif (v94<=73) then local v238=0;local v239;while true do if (v238==0) then v239=v93[2];v91[v239](v21(v91,v239 + 1 ,v93[3]));break;end end elseif (v94>(846 -(201 + 571))) then if  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else do return v91[v93[2]]();end end v85=v85 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
